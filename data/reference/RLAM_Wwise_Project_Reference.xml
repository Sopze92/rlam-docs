<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="#stylesheet" ?>
<!DOCTYPE doc [
  <!ELEMENT xsl:stylesheet (#PCDATA)>
  <!ATTLIST xsl:stylesheet id ID #REQUIRED>
]>
<doc>
<xsl:stylesheet id="stylesheet" version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" >
    <xsl:output method="html" indent="yes" encoding="UTF-8" doctype-system="about:legacy-compat" />
    <xsl:strip-space elements="*"/>
    <xsl:template match="xsl:stylesheet" />
    <xsl:template match="/doc/base"> 
        <html>
            <head>
                <title>Init.bnk dump // RocketLeague // 10.6.2023</title>
                <style>
html { overflow-y: scroll; }
body { font-family: monospace; font-size: 12px; white-space: nowrap; background-color:#222}

/* fields */
.object, .list, .field, .skip, .error, .hchy { margin-left: 23px; }

.head { display: flex;  align-items: center; }
.head > .attr { _margin-right:10px; _display:inline-block; margin: 0; padding: 0; _outline: 1px solid red;}
.head > .attr.type { min-width:45px; color:#7f7f7f; }
.head > .attr.name { min-width:350px; color:#ccc; }
.head > .attr.value { color:#bdd; }
.head > .attr.hashname,
.head > .attr.objpath,
.head > .attr.guidname,
.head > .attr.path { color:#b6ff00; margin-left:10px; }
.head > .attr.valuename { color:#07af60; margin-left:10px; }

.root,
.object,
.list { 
	border-top: 1px solid #444; border-left: 2px solid #444; border-bottom: 1px solid #121212; border-right: 2px solid #121212; 
	margin-bottom: 2px; margin-top: 2px; margin-right:10px; padding: 4px;
	box-shadow: -10px 3px 16px RGBA(0,0,0,0.23);
}

.object { margin-top: 6px; }

.object > .body > .field:nth-child(odd) { background-color: RGBA(255,255,255,0.03); }
.object > .body > .hchy:nth-child(odd) { background-color: RGBA(255,255,255,0.03); }

.closable-inline > .head > .attr { pointer-events: none; }
.root > .head > .attr { pointer-events: none; }
.list > .head > .attr { pointer-events: none; color:#a060ee; }
.object > .head > .attr.name { pointer-events: none; width:auto; }
.object > .head > .attr.type,
.object > .head > .attr.name { pointer-events: none; color:#00e6ff; }

.index { color:#777; font-size:12px; }
.skip { color: #777; } 
.error { color:red; font-weight: bold; }
.error:before { content: '**'; }

.offset { color: #aaa; position: absolute; left: 10px; }
.content { margin-left:80px; }

/* simple */
.simple .head > .attr.type { display:none; }
.simple .offset { display:none; }

/* links */
.target {
    display:inline-block; width:0px; height:0px; min-width:0px;max-width:0px; min-height:0px;max-height:0px; vertical-align: center;
    margin-left:6px;text-indent:16px; overflow: hidden;
    background-color: transparent;  border-radius:1px; width: 0; height: 0; border-left: 6px solid transparent; border-right: 6px solid transparent; border-bottom: 10px solid cadetblue;
}
.anchor {
    display:inline-block; width:10px; height:10px; min-width:10px;max-width:10px; min-height:10px;max-height:10px; vertical-align: center;
    margin-left:6px; text-indent:16px; overflow: hidden;
    background-color: #87b6b8; border-radius:6px;
}

/* toggler */
.closable > .head { cursor:pointer; margin-left: -28px; padding-left: 28px; }
.closable > .head:before {
    content:'-'; position:absolute; font-weight: bold; margin-top:2px; margin-left: -28px; color:#a6a6a6; 
    width:23px; line-height:18px; text-align:center; display:inline-block; background-color:#444; border-radius:6px 0px 0px 6px; vertical-align: bottom;
}
.closable > .head:hover { background-color:#333; }
.closable.hidden > .head:before { content:'+'; }
.closable > .head > .attr { cursor:auto; }
.closable.hidden > .body { display:none; }

/* toggler small */
.closable-inline > .head { cursor:pointer; margin-left: -14px; padding-left: 14px; }
.closable-inline > .head:before {
    content:'-'; position:absolute; font-weight: bold; margin-top:2px; margin-left: -14px; color:#a6a6a6; 
    width:9px; line-height:9px; text-align:center; display:inline-block; background-color:#444; border-radius:6px 0px 0px 6px; vertical-align: bottom;
}
.closable-inline > .head:hover { background-color:#333; }
.closable-inline.hidden > .head:before { content:'+'; }
.closable-inline > .head > .attr { cursor:auto; }
.closable-inline.hidden > .body { display:none; }

/* tooltips */
.tooltip {
    position: relative;
    display: inline-block;
    background-color:#800080;
    width: 10px; height: 10px; margin-left:2px;
}
.tooltip.objpath { }
.tooltip.path { border-radius: 6px; }

.tooltip > .attr {
    display:none; position: absolute; top: -5px; right: 100%;
    border-radius: 5px; padding: 1px; background-color: #eee; color:#800080
}
.tooltip:hover .attr {
    display:block;
}

/* page */
.tools {
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 10px;
    margin-bottom: 30px;
	color: #eee;
}
.tools .toggleall { font-size: 12px; margin-left:2px; }
.view.hide-offset .offset {
    display:none;
}
.view.hide-type .attr.type {
    display:none;
}
.link { margin:0px; margin-left:6px; overflow: hidden; color: #00FFFF; text-decoration: none; }
                </style>
            </head>
            <body>
                <div class="view" id="view">
                    <div class="tools">
                        <label><input type="button" class="toggleall" value="Toggle All"/></label>
                        Hide:
                        <label><input type="checkbox" class="hide" value="hide-offset"/>Offset</label>
                        <label><input type="checkbox" class="hide" value="hide-type"/>Type</label>
                    </div>
                    <div class="content">
						<div class="root">
							<div class="body">
								<div class="object">
									<div class="head">
										<span class="attr type">obj</span>
										<span class="attr name">AudioModding</span>
									</div>
									<div class="body">
										<div class="field">
											<div class="head">
												<span class="attr type">str</span>
												<span class="attr name">Author</span>
												<span class="attr value">Sergio 'Sopze'</span>
											</div>
										</div>
										<div class="field">
											<div class="head">
												<span class="attr type">str</span>
												<span class="attr name">Date</span>
												<span class="attr value">October 7th 2023</span>
											</div>
										</div>
										<div class="field">
											<div class="head">
												<span class="attr type">str</span>
												<span class="attr name">WhatsThis</span>
												<span class="attr value">Reference of every element present in the Wwise RocketLeague Project.</span>
											</div>
										</div>
										<div class="field">
											<div class="head">
												<span class="attr type">str</span>
												<span class="attr name">Purpose</span>
												<span class="attr value">This file is for reference only, packs all the useful data together for the ease of finding something and/or to organize yourself.</span>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
                        <xsl:apply-templates />
                    </div>
                </div>

                <script>
<xsl:text disable-output-escaping="yes">
<![CDATA[
(function() {
    var main = document.getElementById('view');
    var closables = document.getElementsByClassName('closable');
	var closed= false;
    document.addEventListener('click', function(e) {
        if (!e.target)
            return;

        if (e.target.matches('.closable > .head')) {
            e.target.parentNode.classList.toggle('hidden');
            return;
        }
        if (e.target.matches('.closable-inline > .head')) {
            e.target.parentNode.classList.toggle('hidden');
            return;
        }
        if (e.target.matches('.hide')) {
            main.classList.toggle(e.target.value);
            return;
        }
        if (e.target.matches('.toggleall')) {
			for (const element of closables) {
				if(closed) element.classList.remove('hidden');
				else element.classList.add('hidden');
			}
			closed= !closed;
            return;
        }
    }, false);
})();
]]>
</xsl:text>
                </script>
            </body>
        </html>
    </xsl:template>

    <xsl:template match="root">
        <div class="root closable _hidden">
            <div class="head">
                <span class="attr type">proj</span>
                <span class="attr name">v<xsl:value-of select="@version"/></span>
                <span class="attr value"><xsl:value-of select="@name"/></span>
            </div>
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
    </xsl:template>

    <xsl:template match="object|obj">
        <div class="object closable _hidden">
            <div class="head">
                <span class="attr type">obj</span>
                <span class="attr name">
                    <xsl:value-of select="@name|@na"/>
                    <xsl:if test="@index|@ix">
                        <span class="index">[<xsl:value-of select="@index|@ix"/>]</span>
                    </xsl:if>
                </span>
            </div>
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
    </xsl:template>

    <xsl:template match="list|lst">
        <!--<xsl:if test="count(*)>0">-->
        <div class="list closable _hidden">
            <div class="head">
                <span class="attr type">list</span>
                <span class="attr name"><xsl:value-of select="@name|@na"/></span>
                <span class="attr value"><xsl:value-of select="@count|@co"/></span>
            </div>
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
        <!--</xsl:if>-->
    </xsl:template>
	
    <xsl:template match="hchy">
        <div class="hchy">
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
    </xsl:template>

    <xsl:template match="field|fld">
        <div class="field">
            <div class="offset">
                <xsl:value-of select="@offset|@of"/>
            </div>
            <div class="head">
                <span class="attr type"><xsl:value-of select="@type|@ty"/></span>
				<span class="attr hash">
					<xsl:choose>
						<xsl:when test="@ha='missing'">-</xsl:when>
						<xsl:otherwise><xsl:value-of select="@ha"/></xsl:otherwise>
					</xsl:choose>input
				</span>
                <span class="attr name"><xsl:value-of select="@name|@na"/></span>
				<span class="attr value">
					<xsl:if test="@value|@va"><xsl:value-of select="@value|@va"/></xsl:if>
					<xsl:if test="@valuefmt|@vf">, <xsl:value-of select="@valuefmt|@vf"/></xsl:if>
				</span>
				
                <xsl:if test="@vn"><span class="attr valuename"><xsl:value-of select="@vn"/></span></xsl:if>
                
                <!--clickable links need text nodes, but not anchors-->
                <xsl:if test="(@type='tid' or @ty='tid')and (@value!=0 or @va!=0) and (@value!=-1 or @va!=-1)"><a class="target" href="#{@value|@va}">target</a></xsl:if>
                <xsl:if test="@type='sid' or @ty='sid'"><a class="anchor" id="{@value|@va}" href="#{@value|@va}">anchor</a></xsl:if>


				<xsl:if test="@type='ref'"><a class="anchor" id="{@na}" href="#{@ha}">anchor</a></xsl:if>


                <xsl:if test="@hashname|@hn">
                    <span class="attr hashname">(<xsl:value-of select="@hashname|@hn"/>)</span>
                </xsl:if>
                <xsl:if test="@guidname|@gn">
                    <span class="attr guidname">{<xsl:value-of select="@guidname|@gn"/>}</span>
                </xsl:if>
                <xsl:if test="@objpath|@op">
                    <span class="tooltip objpath"><span class="attr objpath"><xsl:value-of select="@objpath|@op"/></span></span>
                </xsl:if>
                <xsl:if test="@path|@pa">
                    <span class="tooltip path"><span class="attr path"><xsl:value-of select="@path|@pa"/></span></span>
                </xsl:if>
            </div>
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
    </xsl:template>

    <xsl:template match="bus|aux">
        <div class="bus closable-inline hidden">
            <div class="offset">
                <xsl:value-of select="@offset|@of"/>
            </div>
            <div class="head">
                <span class="attr type"><xsl:value-of select="@ty"/></span>
                <span class="attr name"><xsl:value-of select="@na"/></span>
				<span class="attr value">
                <xsl:if test="@value|@va"><xsl:value-of select="@value|@va"/></xsl:if>
                <xsl:if test="@valuefmt|@vf">, <xsl:value-of select="@valuefmt|@vf"/></xsl:if>
				</span>
                <xsl:if test="@vn"><span class="attr valuename"><xsl:value-of select="@vn"/></span></xsl:if>
                
                <!--clickable links need text nodes, but not anchors-->
                <xsl:if test="(@type='tid' or @ty='tid')and (@value!=0 or @va!=0) and (@value!=-1 or @va!=-1)"><a class="target" href="#{@value|@va}">target</a></xsl:if>
                <xsl:if test="@type='sid' or @ty='sid'"><a class="anchor" id="{@value|@va}" href="#{@value|@va}">anchor</a></xsl:if>


                <xsl:if test="@hashname|@hn">
                    <span class="attr hashname">(<xsl:value-of select="@hashname|@hn"/>)</span>
                </xsl:if>
                <xsl:if test="@guidname|@gn">
                    <span class="attr guidname">{<xsl:value-of select="@guidname|@gn"/>}</span>
                </xsl:if>
                <xsl:if test="@objpath|@op">
                    <span class="tooltip objpath"><span class="attr objpath"><xsl:value-of select="@objpath|@op"/></span></span>
                </xsl:if>
                <xsl:if test="@path|@pa">
                    <span class="tooltip path"><span class="attr path"><xsl:value-of select="@path|@pa"/></span></span>
                </xsl:if>
            </div>
            <div class="body">
                <xsl:apply-templates />
            </div>
        </div>
    </xsl:template>

</xsl:stylesheet>

<!-- XML -->
<base>
<root name="RocketLeagueWwiseProject" version="1.0">
	<obj na="AudioBuses">
		<taco ty="bus"/>
		<hchy>
			<bus ty="bus" ha="3803692087" na="Master Audio Bus" bv="-6" v="-4" vl="inf" fx="3" state="0" rtcp="0">
				<taco ty="fx"/>
				<fld ty="fx" ha="missing" na="_uemesbhkt" pl="PsyMultiBandCompressor" ss="1"/>
				<fld ty="fx" ha="" na="Brick_Wall_Minus_1dB_Peak_Fast_Release" pl="PsyMultiBandCompressor" ss="1"/>
				<fld ty="fx" ha="missing" na="_ukjudrcfq" pl="AkConvolutionReverb" ss="0"/>
			</bus>
			<hchy>
				<bus ty="bus" ha="1836525785" na="DX" bv="-6" v="-4" vl="inf" fx="0" rtcp="1" state="7">
					<taco ty="rtpc"/>
					<fld ty="rtpc" ha="3024190042" na="Volume_Ambient" bi="MakeUpGain"/>
					<taco ty="stat"/>
					<fld ty="stgp" ha="825123751" na="_uxyytkvad">
						<fld ty="ref" ha="1238504441" na="_uxxrpudav" bv="-96"/>
					</fld>
					<fld ty="stgp" ha="261089142" na="GameMode">
						<fld ty="ref" ha="2598995339" na="Training" bv="-96"/>
						<fld ty="ref" ha="571534028" na="TrainingEditor" bv="-96"/>
					</fld>
					<fld ty="stgp" ha="261089142" na="InUI">
						<fld ty="ref" ha="490733866" na="MidGameMenu" lpf="18" mug="-9"/>
						<fld ty="ref" ha="3092587493" na="Pause" bv="-96"/>
						<fld ty="ref" ha="3721146700" na="ThirdPartyOverlay" bv="-96"/>
					</fld>
					<fld ty="stgp" ha="261089142" na="VoiceChatActive">
						<fld ty="ref" ha="3053630529" na="True" bv="-6"/>
					</fld>
				</bus>
				<hchy>
					<bus ty="bus" ha="1965758141" nu="_uzbihnqdp" bv="-6" v="-4" vl="inf" fx="3" state="0" rtcp="0">
					</bus>
					<bus ty="bus" ha="2002465970" na="DX_Tutorial" bv="-6" v="-4" vl="inf" fx="3" state="0" rtcp="0">
					</bus>
				</hchy>
			</hchy>
		</hchy>
	</obj>
	<obj na="GameSyncs">
		<obj na="Switches">
		</obj>
		<obj na="States">
		</obj>
		<obj na="GameParameters">
		</obj>
	</obj>
	<obj na="ShareSets">
		<obj na="Effects">
		</obj>
		<obj na="Attenuations">
		</obj>
		<obj na="FactoryEffects">
		</obj>
		<obj na="Conversions">
		</obj>
		<obj na="AudioDevices">
		</obj>
	</obj>
</root>
</base>

</doc>
